------------------------------Day01------------------------------------------
--No Assignment given..

------------------------------Day02------------------------------------------
Assignment 1: Pseudocode Development - Task: Write a detailed pseudocode for
a simple program that takes a number as input, calculates the square if it's
even or the cube if it's odd, and then outputs the result. Incorporate
conditional and looping constructs.

Assignment 2: Flowchart Creation - Design a
flowchart that outlines the logic for a user login process. It should include
conditional paths for successful and unsuccessful login attempts, and a loop
that allows a user three attempts before locking the account.

Assignment 3:
Function Design and Modularization - Create a document that describes the
design of two modular functions: one that returns the factorial of a number,
and another that calculates the nth Fibonacci number. Include pseudocode and
a brief explanation of how modularity in programming helps with code reuse
and organization.

--------------------------------Day03------------------------------------------
Assignment 1: Pseudocode and Flowchart for Sorting Algorithm - Write
pseudocode and create a flowchart for a bubble sort algorithm. Provide a
brief explanation of how the algorithm works and a simple array of integers
to demonstrate a dry run of your algorithm.

Assignment 2: Recursive
Function and Efficiency Analysis - Write a recursive function pseudocode and
calculate the nth Fibonacci number and use Big O notation to analyze its
efficiency. Compare this with an iterative approach and discuss the pros and
cons in terms of space and time complexity.

--------------------------------Day04------------------------------------------
---No Assignment

--------------------------------Day05------------------------------------------
Q 1:
Language:C
Problem
statement : Write the logic to for incrementing Squared Number-Star Pattern.
Input
Format      : Take N as input of type integer.
Output
Format     : Print incrementing Squared Number-Star Pattern.
Constraints:
2<=N<=1
Sample Input:
5
Sample Output:
1*2*3*4*5
6*7*8*9*10
11*12*13*14*15
16*17*18*19*20
21*22*23*24*25


Q2:
Language:
C
Problem
statement : Write the logic to print Number Star Right Triangle pattern.
Input
Format      : Take N as input of type
integer.
Output
Format     : Print Number Star Right
Triangle pattern.

Constraints:
2<=N<=10

Sample Input:
5
Sample Output:
1
2*3
4*5*6
7*8*9*10
11*12*13*14*15

Q3: Write a c program to print alphabet triangle.
Input: 5
Output:

         A
       ABA
     ABCBA
   ABCDCBA
 ABCDEDCBA


Q4: write a program to read Sum and Product of digits in a given number

Input Format:
Read a positive integer N

Output Format:
Print the sum and product of digits of the number

Examples:
Input: N = 12
Output:
sum =3
product = 2.

Input: N = 1012
Output:
 Sum = 4
product = 2

Q5:  Write a program to Count number of ways to divide a number in 4 parts.
 Input Format:
 First Line Of Input Contains T test cases
 Second line of Input Contains a positive integer n,
 Output Format:
 Print the count number of ways for division can take place.
 Examples :
 Input:
 1
   5 => 1 + 1 + 1 + 2

 Output: 1

 Input:1 6
   2 + 2 + 1 + 1
   1 + 1 + 1 + 3
 Output: 2

 Input: 8
 Output: 5
1+1+1+5
2+2+2+2
2+2+1+3
1+1+2+4
3+3+1+1

Q6: Program to Check if product of digits of a number at even and odd places is equal.
Input:

2841
Output:
 Yes

Input:

4324
Output:
No

Q7: Isha is playing with numbers and trying to write program to Check if the sum of distinct digits of two integers are equal

Output Format:
If  the sum of distinct digits of both the numbers are equal
if true        print YES
otherwise  print NO.

Examples:
Input:
 2452
 9222
Output:
 YES

Input
121
3035
Output:
 NO

Q8: Write a program to Check whether product of digits at even places is divisible by sum of digits at odd place of a number.

Examples:
Input:
2157
Output:
TRUE

Input:
1234
Output:
TRUE
--------------------------------Day06------------------------------------------
Q.

Given an unsorted array a of
size N of non-negative integers, find a continuous sub-array which adds to a given number sum.

Input Format:

The first line contains an integer, denoting the size of the array.


The second line contains integers denoting the elements of the array.

The last line contains an integer, denoting the sum.

Constraints

1<= n<=100
1<=arr<= 1000, where arr is the ith element of the array.
1<= n<=100000
Output Format:
The output line contains integers denoting the indexes.


TESTCASE
1:
Input:
7
[1,
4, 0, 0, 3, 10, 5]
sum =
7
Output:

Sum found between indexes 1 and 4

TESTCASE
2:
Input:
2
[1, 4]
sum = 0
Output:
No subarray found

--------------------------------Day07------------------------------------------
--------------------------------Day08------------------------------------------
--------------------------------Day09------------------------------------------
